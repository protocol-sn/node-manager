package coop.stlma.tech.protocolsn.registration.data.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.time.Instant;
import java.util.UUID;

/**
 * Database entity representing a registered plugin.
 *
 * @author John
 */
@Entity
@Table(name = "registered_plugins")
@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
public class PluginRegistrationEntity {

    /**
     * Autogenerated UUID serving as the primary key.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private UUID id;

    /**
     * Distinguishing name for the plugin
     */
    @Column(name = "plugin_name")
    private String pluginName;

    /**
     * Host URL of the plugin
     */
    @Column(name = "plugin_location")
    private String pluginLocation;

    /**
     * Endpoint for health checks
     */
    @Column(name = "health_endpoint")
    private String healthEndpoint;

    /**
     * Result of the most recent health check
     */
    @Column(name = "current_health_status")
    private String currentHealthStatus;

    /**
     * Description provided by the most recent health check
     */
    @Column(name = "current_health_description")
    private String currentHealthDescription;

    /**
     * Time of the most recent health check
     */
    @Column(name = "last_health_check")
    private Instant lastHealthCheck;

    /**
     * Last time a health check returned HEALTHY
     */
    @Column(name = "last_healthy_response")
    private String lastHealthCheckStatus;
}
